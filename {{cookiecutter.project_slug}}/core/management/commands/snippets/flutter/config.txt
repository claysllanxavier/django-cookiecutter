// #FileLocked

import 'dart:developer' as developer;

import 'package:flutter/material.dart';

const heightAppBarPage = 22.0;
const marginTopCustomAppBar = 12.0;
const marginHorizontalSectionsDataPage = 12.0;

// Chave para determinar se a versão está em desenvolvimento ou produção
const bool releaseVersion = false;

// URI para desenvolvimento
// URI definida do settings do Projeto Django -> $DjangoAPIPath$
// TODO Altere o valor dessa constante para o IP do projeto Django
const String uriDeveloper = "http://192.168.0.3:8080/core/api/";

// TODO Ajustando o projeto Android para aceitar conexão sem https na comunicação via HTTP
// Acesse o arquivo AndroidManifest.xml no caminho: seu_projeto/android/app/src/main e adicione
// a chave a seguir: android:usesCleartextTraffic="true" na tag application, vide exemplo a seguir
/*
    <application
        android:name="io.flutter.app.FlutterApplication"
        android:label="seu_projeto"
        android:usesCleartextTraffic="true"
        android:icon="@mipmap/ic_launcher">
*/

// URI para produção
const String uriRelease = "";

// URL para os termos de uso
const String urlTermoUso = "";

class Config {
  static const uri = releaseVersion ? uriRelease : uriDeveloper;
  static const uriAuth = "";

  // TODO Adicionar aqui o token para ambiente de desenvolvimento.
  /// O token abaixo é o mesmo do super usuário do projeto django, caso você tenha executado o comando
  /// python mcok_superuser.py lá no projeto Django
  static const DRFToken = "Token 2b817ddbb5b974e5a451a8156963de586d72079e";

  static const String uri_media = "media/";
  static const String app_title = "Rotas ";
  static const bool usingURL = false;
  static const double marginHead = 0.25;
}

class DebugPrint {
  static void print(String texto) {
    if (releaseVersion == false) {
      developer.log(texto.toLowerCase(), name: 'Debug:');
    }
  }

  static void error(String error) {
    if (releaseVersion == false) {
      String _error = "\n##########\n";
      _error += "${error.toUpperCase()}\n";
      _error += "##########\n";
      developer.log("erro", name: 'Error:', error: "$_error");
    }
  }
}

class CustomTheme{
 //Colors for theme
  static Color defaultColor = Colors.black;
  static Color lightPrimary = const Color(0xfffcfcff);
  static Color lightAccent = Colors.blue;
  static Color lightBG = const Color(0xfffcfcff);
  static Color darkPrimary = Colors.black;
  static Color darkAccent = Colors.blueGrey;
  static Color darkBG = Colors.black;

  //Colors for main cards theme light and dark
  static Color mainCardLightBorderColor = Colors.black87;
  static Color mainCardLightIconColor = Colors.black38;
  static Color mainCardLightTextColor = Colors.black38;
  static Color mainCardLightBackgroundColor = Colors.white;
  static Color mainCardLightShadowColor = Colors.black38;
  static Color mainTextFieldLightColor = Colors.black45;
  static Color mainButtonBgLightColor = Colors.black38;
  static Color mainButtonFontLightColor = Colors.white;

  static Color mainCardDarkBorderColor = Colors.grey[700];
  static Color mainCardDarkIconColor = Colors.grey[300];
  static Color mainCardDarkTextColor = Colors.grey[300];
  static Color mainCardDarkBackgroundColor = Colors.grey[850];
  static Color mainCardDarkShadowColor = Colors.grey[900];
  static Color mainTextFieldDarkColor = Colors.grey[600];
  static Color mainButtonBgDarkColor = Colors.grey[600];
  static Color mainButtonFontDarkColor = Colors.black;

  static ThemeData lightTheme = ThemeData(
    backgroundColor: lightBG,
    primaryColor: lightPrimary,
    accentColor:  lightAccent,
    cursorColor: lightAccent,
    scaffoldBackgroundColor: lightBG,
    appBarTheme: AppBarTheme(
      elevation: 0,
      textTheme: TextTheme(
        title: TextStyle(
          color: darkBG,
          fontSize: 18.0,
          fontWeight: FontWeight.w800,
        ),
      ),
    ),
  );

  static ThemeData darkTheme = ThemeData(
    brightness: Brightness.dark,
    backgroundColor: darkBG,
    primaryColor: darkPrimary,
    accentColor: darkAccent,
    scaffoldBackgroundColor: darkBG,
    cursorColor: darkAccent,
    appBarTheme: AppBarTheme(
      elevation: 0,
      textTheme: TextTheme(
        title: TextStyle(
          color: lightBG,
          fontSize: 18.0,
          fontWeight: FontWeight.w800,
        ),
      ),
    ),
  );
}