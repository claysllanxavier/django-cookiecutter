"""
Django settings for {{ cookiecutter.project_slug }} project.

Generated by 'django-admin startproject' using Django 3.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import sys

from django.conf import settings

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = [ '{{ cookiecutter.domain_name }}', ]

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # Django Rest Framework
    'rest_framework.authtoken',
    'rest_framework',
    'dj_rest_auth',
    'drf_yasg',

    'core'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = '{{ cookiecutter.project_slug }}.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = '{{ cookiecutter.project_slug }}.wsgi.application'


AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


LANGUAGE_CODE = 'pt-BR'
TIME_ZONE = 'America/Sao_Paulo'
USE_I18N = True
USE_L10N = True
USE_TZ = True

DECIMAL_SEPARATOR = ','
USE_THOUSAND_SEPARATOR = True

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

PROJECT_NAME = "{{ cookiecutter.project_name }}"

# Desativando as migrações quando estiver executando os testes.
if 'test' in sys.argv:
    class DisableMigrations(object):

        def __contains__(self, item):
            return True

        def __getitem__(self, item):
            return None


    DATABASES['default'] = {
        'ENGINE': 'django.db.backends.sqlite3',
        'TEST': {
            'NAME': 'test.sqlite3'
        }
    }

    MIGRATION_MODULES = DisableMigrations()

try:
    from {{ cookiecutter.project_slug }}.settings_local import *
except:
    pass

if DEBUG:
    # Adicionando o debug tool bar no middleware
    MIDDLEWARE.append('debug_toolbar.middleware.DebugToolbarMiddleware')
    # MIDDLEWARE.append('silk.middleware.SilkyMiddleware')
    # Adicionando o debug tool bar no installed apps
    INSTALLED_APPS.append('debug_toolbar')
    # INSTALLED_APPS.append('silk')
    # Configurando o debug tool bar para mapear os eventos do localhost
    INTERNAL_IPS = [
        '127.0.0.1', 'localhost'
    ]

# ÁRE PARA CONFIGURAÇÃO DAS VARIÁVEIS DO PROJETO

try:
    SYSTEM_NAME = settings.PROJECT_NAME
except:
    SYSTEM_NAME = 'Projeto Core'

"""Variável responsável por configurar qual Manager utilizar
Se for True usa o manager padrão que retorna todos os elementos
mesmo os que foram marcados com deleted = True e enabled = False
Se for False usa o manager configurado para não mostrar 
os elementos marcados com deleted = True e enabled
"""
try:
    use_default_manager = settings.USE_DEFAULT_MANAGER
except:
    use_default_manager = False

# Carregando o caminho para o projeto Flutter
try:
    FLUTTER_PROJECT_PATH = settings.FLUTTER_PROJECT_PATH
except:
    pass

# Carregando as apps que devem ser mapeadas para gerar o projeto Flutter
try:
    FLUTTER_APPS = settings.FLUTTER_APPS
except:
    pass

# Carregando o URI da API
try:
    API_PATH = settings.API_PATH
except:
    pass

# Carregando as apps que será gerada a documentação utilizando o Sphinx
try:
    DOC_APPS = settings.DOC_APPS
except:
    pass

# Carregando a URL do login redirect
try:
    LOGIN_REDIRECT_URL = settings.LOGIN_REDIRECT_URL
except:
    pass

# Carregando a URL do logout redirect
try:
    LOGOUT_REDIRECT_URL = settings.LOGOUT_REDIRECT_URL
except:
    pass

# ÁRE PARA CONFIGURAÇÃO DAS VARIÁVEIS DO PROJETO

# HERE STARTS DYNACONF EXTENSION LOAD (Keep at the very bottom of settings.py)
# Read more at https://dynaconf.readthedocs.io/en/latest/guides/django.html
import dynaconf  # noqa
settings = dynaconf.DjangoDynaconf(__name__)  # noqa
# HERE ENDS DYNACONF EXTENSION LOAD (No more code below this line)